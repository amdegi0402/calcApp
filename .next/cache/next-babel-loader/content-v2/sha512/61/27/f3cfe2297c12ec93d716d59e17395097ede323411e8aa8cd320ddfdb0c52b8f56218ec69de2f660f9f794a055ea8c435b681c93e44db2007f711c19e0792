{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期化\n\nconst initial = {\n  message: 'START',\n  count: 0\n}; //レデューサー\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} //initStore関数(redux-store.jsで必要)\n//createStoreを関数の形にしてエクスポートしているだけのもの\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware)); //thumkMiddlewareというミドルウェアを組み込むことでNext.jsでReduxの機能がうまく動くようにしている\n}","map":{"version":3,"sources":["/home/anet/next-sample-app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,KAAK,EAAE;AAFK,CAAhB,C,CAKA;;AACA,SAASC,cAAT,CAAwBC,KAAK,GAAGJ,OAAhC,EAAyCK,MAAzC,EAAgD;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAM;AACFL,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFnB,OAAN;;AAIJ,SAAK,WAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAEG,KAAK,CAACF,KAAN,GAAa;AADpB,OAAN;;AAGJ,SAAK,OAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAE,OADP;AAEFC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFb,OAAN;;AAIJ;AACI,aAAOE,KAAP;AAhBR;AAkBH,C,CAED;AACA;;;AACA,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGJ,OAA3B,EAAmC;AACtC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EACdN,eAAe,CAACC,eAAD,CADD,CAAlB,CADsC,CAGlC;AACP","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期化\nconst initial = {\n    message: 'START',\n    count: 0\n}\n\n//レデューサー\nfunction counterReducer(state = initial, action){\n    switch(action.type){\n        case 'INCREMENT':\n            return{\n                message: 'INCREMENT',\n                count: state.count + 1\n            };\n        case 'DECREMENT':\n            return{\n                message: state.count -1\n            };\n        case 'RESET':\n            return{\n                message: 'RESET',\n                count: initial.count\n            };\n        default:\n            return state;\n    }\n}\n\n//initStore関数(redux-store.jsで必要)\n//createStoreを関数の形にしてエクスポートしているだけのもの\nexport function initStore(state = initial){\n    return createStore(counterReducer, state,\n        applyMiddleware(thunkMiddleware))\n        //thumkMiddlewareというミドルウェアを組み込むことでNext.jsでReduxの機能がうまく動くようにしている\n}"]},"metadata":{},"sourceType":"module"}